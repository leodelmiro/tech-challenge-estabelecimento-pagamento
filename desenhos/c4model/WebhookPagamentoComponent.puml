@startuml Clean Architecture
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Person_Ext(mercadopago, "Mercado Pago", "Mercado Pago Recebe Pagamento e Notifica")

System_Boundary(identificaWebhook, "IdentificaWebhook") {
    Component(webhookAPI, "WebhookApi", "API", "Receberequisições HTTP e delega para o controller")
    Component(webhookController, "WebhookController", "Controller", "Recebe requisições e delega para o caso de uso")
    Component(pagaPedidoUseCase, "PagaPedidoUseCase", "Caso de Uso", "Contém a lógica de negócio para pagamento de pedido")
    Component(pedido, Pedido, "Entidade", "Modelos de domínio")
    Component(pagaPedidoGateway, "PagaPedidoGateway", "Gateway", "Acesso a inteface de comunicação externa")
    Component(pedidoRepository, "PedidoRepository", "Repositório", "Acesso a dados e persistência")
    ComponentDb(pedidoDb, "Pedido DB", "Banco de Dados", "Banco de Dados com informações de Pedidos")

    Rel(mercadopago, webhookAPI, "Chama", "HTTP POST /api/v1/webhooks/payments")
    Rel(webhookAPI, webhookController, "Chama", "Método pagar")
    Rel(webhookController, pagaPedidoUseCase, "Usa", "Interface de Caso de Uso")
    Rel(pagaPedidoUseCase, pedido, "Manipula", "Objeto de Domínio")
    Rel(pagaPedidoUseCase, pagaPedidoGateway, "Usa", "Interface de Repositório")
    Rel(pagaPedidoGateway, pedidoRepository, "Usa", "Interface de Repositório")
    Rel(pedidoRepository, pedidoDb, "Usa", "Spring Data")
}

SHOW_LEGEND()
@enduml