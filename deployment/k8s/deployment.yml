apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-pagamento-app
  namespace: backend-estabelecimento
  labels:
    app.kubernetes.io/name: backend-pagamento-app
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: backend-pagamento-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend-pagamento-app
    spec:
      serviceAccountName: backend-pagamento-serviceaccount
      containers:
        - name: backend-pagamento-app
          image: DOCKER_IMAGE
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "256m"
              memory: "512M"
            limits:
              cpu: "512m"
              memory: "2048M"
          env:
            - name: DYNAMODB_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-pagamento-configmap
                  key: db_url
            - name: SQS_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-pagamento-configmap
                  key: sqs_url
            - name: AWS_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: backend-pagamento-configmap
                  key: aws_access_key
            - name: AWS_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: backend-pagamento-configmap
                  key: aws_secret_key
            - name: MERCADO_PAGO_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-pagamento-configmap
                  key: mercado_pago_url
            - name: MERCADO_PAGO_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: backend-pagamento-configmap
                  key: mercado_pago_token
          ports:
            - name: http-port
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http-port
            initialDelaySeconds: 120
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http-port
            initialDelaySeconds: 240
            periodSeconds: 15
            failureThreshold: 3